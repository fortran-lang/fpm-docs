# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021 Fortran programming language community
# This file is distributed under the same license as the fpm package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: fpm \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-05-16 19:47+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../pages/design/index.md:3
msgid "Design documents"
msgstr ""

#: ../../pages/design/index.md:6
msgid ""
"This section contains the resources around the design of the Fortran Package "
"Manager (fpm)."
msgstr ""

#: ../../pages/design/index.md:9
msgid ""
"Fortran Package Manager (fpm) is a package manager and build system for "
"Fortran. Its key goal is to improve the user experience of Fortran "
"programmers. It does so by making it easier to build your Fortran program or "
"library, run the executables, tests, and examples, and distribute it as a "
"dependency to other Fortran projects. Fpm's user interface is modeled after "
"[Rust's Cargo](https://doc.rust-lang.org/cargo/). Its long term vision is to "
"nurture and grow the ecosystem of modern Fortran applications and libraries."
msgstr ""

#: ../../pages/design/logo.md:1
msgid "The fpm logo"
msgstr ""

#: ../../pages/design/logo.md:4
msgid ""
"The fpm logo was developed by the Fortran community in "
"[fpm#380](https://github.com/fortran-lang/fpm/discussions/380) and "
"contributed by [@1984logo](https://github.com/1984logo)."
msgstr ""

#: ../../pages/design/logo.md:7
msgid ""
"The logo for the Fortran package manager (fpm) represents a gift box with a "
"bow forming the letter F. For the monochromatic version the color of the "
"Fortran logo {bdg-primary-line}`#734f96` is used. The color version "
"additionally uses lighter and darker variants of the base color. While both "
"variants are supposed to be visible on dark background, the logo can be "
"produced in light color or as outline to be better visible when used on dark "
"or black backgrounds."
msgstr ""

#: ../../pages/how-to/index.md:3
msgid "How-To guides"
msgstr ""

#: ../../pages/how-to/index.md:6
msgid ""
"This section contains practical guides and recipes for solving specific "
"problems with fpm."
msgstr ""

#: ../../pages/index.md:138
msgid "Installation"
msgstr ""

#: ../../pages/index.md:138
msgid "Tutorial"
msgstr ""

#: ../../pages/index.md:138
msgid "How-To"
msgstr ""

#: ../../pages/index.md:138
msgid "Reference"
msgstr ""

#: ../../pages/index.md:138
msgid "Design"
msgstr ""

#: ../../pages/index.md:138 ../../pages/registry/index.rst:2
msgid "Registry"
msgstr ""

#: ../../pages/index.md:5 ../../pages/index.md:13
msgid "Fortran Package Manager"
msgstr ""

#: ../../pages/index.md:16
msgid "Package manager and build system for Fortran"
msgstr ""

#: ../../pages/index.md:19
msgid "Welcome to the documentation for the Fortran Package Manager (fpm)."
msgstr ""

#: ../../pages/index.md:22
msgid ""
"These pages are currently under construction. Please help us improve them by "
"contributing content or reporting issues."
msgstr ""

#: ../../pages/index.md:37
msgid "{octicon}`download` Install"
msgstr ""

#: ../../pages/index.md:40
msgid "Instructions on how to install fpm across Windows, Linux, macOS and more."
msgstr ""

#: ../../pages/index.md:49
msgid "Install fpm"
msgstr ""

#: ../../pages/index.md:59
msgid "{octicon}`mortar-board` Tutorials"
msgstr ""

#: ../../pages/index.md:62
msgid ""
"Learn about using fpm for Fortran development, creating projects and managing"
" dependencies."
msgstr ""

#: ../../pages/index.md:71
msgid "Browse tutorials"
msgstr ""

#: ../../pages/index.md:81
msgid "{octicon}`book` How-To Guides"
msgstr ""

#: ../../pages/index.md:84
msgid "Practical guides and recipes to solve specific problems with fpm"
msgstr ""

#: ../../pages/index.md:93
msgid "Browse recipes"
msgstr ""

#: ../../pages/index.md:103
msgid "{octicon}`gear` References"
msgstr ""

#: ../../pages/index.md:106
msgid "Specifications of fpm components and implementation references"
msgstr ""

#: ../../pages/index.md:115
msgid "Browse references"
msgstr ""

#: ../../pages/index.md:120
msgid "{fa}`cubes` Registry"
msgstr ""

#: ../../pages/index.md:122
msgid ""
"There are already many packages available for use with fpm, providing an "
"easily accessible and rich ecosystem of general purpose and high-performance "
"code. For a full list of packages checkout the [fpm "
"registry](registry/index). New packages can be submitted to the registry "
"[here](https://github.com/fortran-lang/fpm-registry)."
msgstr ""

#: ../../pages/index.md:127
msgid "{fa}`newspaper` News"
msgstr ""

#: ../../pages/index.md:129
msgid ""
"Recent events around the Fortran Package Manager, such as new releases, "
"conference talks, and new packages will be announced here."
msgstr ""

#: ../../pages/install/index.md:3
msgid "Installing fpm"
msgstr ""

#: ../../pages/install/index.md:5
msgid ""
"This how-to guide covers the installation of the Fortran Package Manager "
"(fpm) on various platforms."
msgstr ""

#: ../../pages/install/index.md:7
msgid "{fab}`apple` {fab}`linux` {fab}`windows` Download binaries"
msgstr ""

#: ../../pages/install/index.md:9
msgid ""
"Binaries for macOS, Linux, and Windows (all on x86-64) are available for "
"download for each release of fpm, as well as the latest (bleeding edge) "
"release which mirrors the latest commit in the main branch of fpm."
msgstr ""

#: ../../pages/install/index.md:11
msgid ""
"Navigate to [fpm releases](https://github.com/fortran-lang/fpm/releases) to "
"see all available releases. The downloadable files are available at the "
"bottom of each release section under *Assets*. Click on the appropriate link "
"based on your OS. For example, to download a macOS fpm binary, click on the "
"link that has *macos* in its name. After downloading, you will need to make "
"your binary executable. On Linux and macOS, you can do this by typing"
msgstr ""

#: ../../pages/install/index.md:22
msgid ""
"Optionally, place the binary in a directory that is globally accessible "
"(*i.e.* in the ``PATH`` environment variable on Linux and macOS). You can "
"also rename the binary to just *fpm* for easier use."
msgstr ""

#: ../../pages/install/index.md:25
msgid ""
"For Windows, both a self-contained binary and a Windows Installer for fpm are"
" available."
msgstr ""

#: ../../pages/install/index.md:28
msgid ""
"Links that end with ``.sha256`` provide the cryptographic hashes that you can"
" use to verify if the download of your binary was successful. To verify the "
"integrity of the downloaded binary the checksum can be computed locally and "
"compared with the one provided in the release"
msgstr ""

#: ../../pages/install/index.md:38
msgid ""
"If the checksums mismatch, the download was most likely incomplete and the "
"binary non-functional. In this case, retry the download of the binary and "
"confirm that the checksums match."
msgstr ""

#: ../../pages/install/index.md:43
msgid "{fab}`windows` MSYS2 package manager"
msgstr ""

#: ../../pages/install/index.md:45
msgid ""
"[![MSYS2 mingw package](https://repology.org/badge/version-for-"
"repo/msys2_mingw/fpm-fortran-package-"
"manager.svg)](https://packages.msys2.org/base/mingw-w64-fpm)"
msgstr ""

#: ../../pages/install/index.md:45
msgid "MSYS2 mingw package"
msgstr ""

#: ../../pages/install/index.md:47
msgid ""
"The [MSYS2 project](https://www.msys2.org) provides a package manager and "
"makes many common Unix tools available for Windows."
msgstr ""

#: ../../pages/install/index.md:50
msgid ""
"To install download the ``msys2-x86_64-YYYYMMDD.exe`` installer from the "
"MSYS2 webpage and run it. MSYS2 will create several new desktop shortcuts, "
"like *MSYS terminal*, *MinGW64 terminal* and *UCRT64 terminal* (more "
"information on MSYS2 terminals are available "
"[here](https://www.msys2.org/docs/terminals/))."
msgstr ""

#: ../../pages/install/index.md:53
msgid ""
"The Fortran Package Manager is supported for the *UCRT64*, *MinGW64*, or "
"*MinGW32* terminal."
msgstr ""

#: ../../pages/install/index.md:56
msgid "Open a new terminal and update your installation with"
msgstr ""

#: ../../pages/install/index.md:62
msgid ""
"You might have to update MSYS2 and ``pacman`` first, restart the terminal and"
" run the above command again to update the installed packages."
msgstr ""

#: ../../pages/install/index.md:64
msgid ""
"If you are using the *MinGW64 terminal* you can install the required software"
" with"
msgstr ""

#: ../../pages/install/index.md:71
msgid ""
"Both *git* and *gfortran* are not mandatory dependencies for running fpm. If "
"you provide *git* and *gfortran* from outside they will get picked up as "
"well."
msgstr ""

#: ../../pages/install/index.md:76
msgid "{fab}`apple` Homebrew package manager"
msgstr ""

#: ../../pages/install/index.md:78
msgid ""
"The Fortran Package Manager (fpm) is available for the "
"[homebrew](https://brew.sh) package manager on MacOS via an additional tap. "
"To install fpm via brew, include the new tap and install it using"
msgstr ""

#: ../../pages/install/index.md:86
msgid ""
"Binary distributions are available for MacOS 11 (Catalina) and 12 (Big Sur) "
"for x86\\_64 architectures. For other platforms fpm will be built locally "
"from source automatically."
msgstr ""

#: ../../pages/install/index.md:89 ../../pages/install/index.md:102
msgid "Fpm should be available and functional after those steps."
msgstr ""

#: ../../pages/install/index.md:92
msgid "{fab}`apple` Macports"
msgstr ""

#: ../../pages/install/index.md:94
msgid ""
"[![MacPorts package](https://repology.org/badge/version-for-repo/macports"
"/fpm-fortran-package-manager.svg)](https://ports.macports.org/port/fpm/)"
msgstr ""

#: ../../pages/install/index.md:94
msgid "MacPorts package"
msgstr ""

#: ../../pages/install/index.md:96
msgid ""
"The Fortran Package Manager (fpm) is available via "
"[macports](https://www.macports.org/) and can be installed with"
msgstr ""

#: ../../pages/install/index.md:105
msgid "{fab}`apple` {fab}`linux` Conda package manager"
msgstr ""

#: ../../pages/install/index.md:107
msgid ""
"[![Conda (channel only)](https://img.shields.io/conda/vn/conda-"
"forge/fpm)](https://github.com/conda-forge/fpm-feedstock)"
msgstr ""

#: ../../pages/install/index.md:107
msgid "Conda (channel only)"
msgstr ""

#: ../../pages/install/index.md:109
msgid "Fpm is available on [conda-forge], to add conda-forge to your channels use:"
msgstr ""

#: ../../pages/install/index.md:115
msgid "Fpm can be installed with:"
msgstr ""

#: ../../pages/install/index.md:122
msgid ""
"Alternatively, if you want fpm to be always available directly install into "
"your current environment with"
msgstr ""

#: ../../pages/install/index.md:129
msgid ""
"The conda package manager can be installed from "
"[miniforge](https://github.com/conda-forge/miniforge/releases) or from "
"[miniconda](https://docs.conda.io/en/latest/miniconda.html)."
msgstr ""

#: ../../pages/install/index.md:137
msgid "{fab}`apple` {fab}`linux` Spack package manager"
msgstr ""

#: ../../pages/install/index.md:139
msgid ""
"[![Spack package](https://repology.org/badge/version-for-repo/spack/fpm-"
"fortran-package-"
"manager.svg)](https://packages.spack.io/package.html?name=fpm)"
msgstr ""

#: ../../pages/install/index.md:139
msgid "Spack package"
msgstr ""

#: ../../pages/install/index.md:141
msgid ""
"Fpm is available with spack in its develop version. To install fpm from spack"
" use"
msgstr ""

#: ../../pages/install/index.md:148
msgid ""
"You can add `+openmp` to enable parallelization of the target compilation in "
"fpm. To use fpm in your environment load it with"
msgstr ""

#: ../../pages/install/index.md:155
msgid ""
"For more details check the package information "
"[here](https://spack.readthedocs.io/en/latest/package_list.html#fpm)."
msgstr ""

#: ../../pages/install/index.md:160
msgid "{fab}`linux` Arch Linux user repository"
msgstr ""

#: ../../pages/install/index.md:162
msgid ""
"[![AUR version](https://img.shields.io/aur/version/fortran-"
"fpm)](https://aur.archlinux.org/packages/fortran-fpm) [![AUR "
"version](https://img.shields.io/aur/version/fortran-fpm-"
"bin)](https://aur.archlinux.org/packages/fortran-fpm-bin)"
msgstr ""

#: ../../pages/install/index.md:162
msgid "AUR version"
msgstr ""

#: ../../pages/install/index.md:165
msgid ""
"The Arch Linux user repository (AUR) contains two packages for the Fortran "
"Package Manager (fpm). With the [fortran-fpm-"
"bin](https://aur.archlinux.org/packages/fortran-fpm-bin/) installs the "
"statically linked Linux/x86\\_64 binary from the release page, while the "
"[fortran-fpm](https://aur.archlinux.org/packages/fortran-fpm/) package will "
"bootstrap fpm from source."
msgstr ""

#: ../../pages/install/index.md:168
msgid "Select one of the PKGBUILDs and retrieve it with"
msgstr ""

#: ../../pages/install/index.md:175
msgid ""
"As usual, first inspect the PKGBUILD before building it. After verifying the "
"PKGBUILD is fine, build the package with"
msgstr ""

#: ../../pages/install/index.md:182
msgid "Once the build passed pacman will ask to install the fpm package."
msgstr ""

#: ../../pages/install/index.md:185
msgid "OpenBSD ports"
msgstr ""

#: ../../pages/install/index.md:187
msgid ""
"[![OpenBSD port](https://repology.org/badge/version-for-repo/openbsd/fpm-"
"fortran-package-manager.svg)](https://openports.pl/path/devel/fpm)"
msgstr ""

#: ../../pages/install/index.md:187
msgid "OpenBSD port"
msgstr ""

#: ../../pages/install/index.md:189
msgid ""
"A port for OpenBSD is available in the default port tree. To install fpm "
"install the *devel/fpm* port with"
msgstr ""

#: ../../pages/install/index.md:192
msgid "``{code-block} bash cd /usr/ports/devel/fpm make install clean"
msgstr ""

#: ../../pages/install/index.md:211
msgid "Building from source"
msgstr ""

#: ../../pages/install/index.md:213
msgid ""
"To build fpm from source get the latest fpm source, either by cloning the "
"repository from GitHub with"
msgstr ""

#: ../../pages/install/index.md:220
msgid "or by downloading a source tarball from the latest source"
msgstr ""

#: ../../pages/install/index.md:228
msgid ""
"The available install script allows to bootstrap fpm by using just a Fortran "
"compiler, git and network access. Invoke the script to start the bootstrap "
"build"
msgstr ""

#: ../../pages/install/index.md:235
msgid "Fpm will be installed in ``~/.local/bin/fpm``."
msgstr ""

#: ../../pages/install/index.md:238
msgid ""
"Building the bootstrapper binary from the single source file version might "
"take a few seconds, which might make the install script look like it is "
"hanging."
msgstr ""

#: ../../pages/install/index.md:242
msgid ""
"The installation location can be adjusted by passing the "
"``--prefix=/path/to/install`` option."
msgstr ""

#: ../../pages/install/index.md:245
msgid ""
"If you can't run the install script, you can perform the bootstrap procedure "
"manually, with the following three steps:"
msgstr ""

#: ../../pages/install/index.md:247
msgid "Download the single source version of fpm"
msgstr ""

#: ../../pages/install/index.md:253
msgid "Build a bootstrap binary from the single source version"
msgstr ""

#: ../../pages/install/index.md:260
msgid "Use the bootstrap binary to build the feature complete fpm version"
msgstr ""

#: ../../pages/news.md:3
msgid "News"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:7
msgid "Fpm version 0.5.0 released"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:9
msgid ""
"We have a large number of bug fixes in this release and made plenty of "
"improvements to the tooling around fpm, like the continuous delivery and the "
"Windows installer. New features include the possibility for better "
"compiler/linker selection and the improved build backend (test are only build"
" when needed, link dependencies are properly tracked)."
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:12
msgid ""
"Find the full release notes [here](https://github.com/fortran-"
"lang/fpm/releases/tag/v0.5.0)."
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:14
msgid "Changes"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:16
msgid ""
"tests are only build for fpm test and not by default anymore "
"([#572](https://github.com/fortran-lang/fpm/pull/572))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:17
msgid ""
"environment variables for setting Fortran and C compiler changed "
"([#549](https://github.com/fortran-lang/fpm/pull/549), "
"[#584](https://github.com/fortran-lang/fpm/pull/584))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:18
msgid ""
"add LFortran optimization flag to release profile ([#597](https://github.com"
"/fortran-lang/fpm/pull/597))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:21
msgid "New features"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:23
msgid ""
"command line arguments for linker, archiver and C-compiler added "
"([#549](https://github.com/fortran-lang/fpm/pull/549))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:26
msgid "Fixes"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:28
msgid ""
"tabs are correctly expanded in source file scanning "
"([#521](https://github.com/fortran-lang/fpm/pull/521))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:29
msgid ""
"installer script will use fpm update to avoid stale dependencies "
"([#557](https://github.com/fortran-lang/fpm/pull/557))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:30
msgid ""
"use multiple build output directories depending on link line options "
"([#575](https://github.com/fortran-lang/fpm/pull/575))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:31
msgid ""
"update truncated help text ([#578](https://github.com/fortran-"
"lang/fpm/pull/578))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:32
msgid ""
"fix directory removal in fpm new tests ([#579](https://github.com/fortran-"
"lang/fpm/pull/579))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:33
msgid ""
"use MSVS like commands for Intel compilers on Windows "
"([#590](https://github.com/fortran-lang/fpm/pull/590))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:34
msgid ""
"add critical section to mkdir in backend ([#613](https://github.com/fortran-"
"lang/fpm/pull/613))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:35
msgid ""
"fix modules listing (for install) ([#612](https://github.com/fortran-"
"lang/fpm/pull/612))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:36
msgid ""
"repair --list option and correct obsolete descriptions of the --list option "
"([#607](https://github.com/fortran-lang/fpm/pull/607))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:37
msgid ""
"fix incorrect Intel release flag on Windows ([#602](https://github.com"
"/fortran-lang/fpm/pull/602))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:39
msgid ""
"list names without suffix for Windows ([#595](https://github.com/fortran-"
"lang/fpm/pull/595))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:43
msgid "Repository updates"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:45
msgid ""
"add files and workflow to make installer on release "
"([#616](https://github.com/fortran-lang/fpm/pull/616))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:46
msgid ""
"issue templates added to guide reporting of bugs, package issues, feature "
"requests and specification proposals ([#558](https://github.com/fortran-"
"lang/fpm/pull/558))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:47
msgid ""
"default branch renamed to *main* ([#565](https://github.com/fortran-"
"lang/fpm/pull/565))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:48
msgid ""
"update documentation on distributions supporting fpm, like spack and MSYS2 "
"([#562](https://github.com/fortran-lang/fpm/pull/562))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:49
msgid ""
"new workflow to automatically generate single source fpm versions "
"([#563](https://github.com/fortran-lang/fpm/pull/563))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:50
msgid ""
"continuous delivery of current fpm git source implemented "
"([#569](https://github.com/fortran-lang/fpm/pull/569), "
"[#564](https://github.com/fortran-lang/fpm/pull/564))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:51
msgid ""
"update of bootstrapping instructions ([#587](https://github.com/fortran-"
"lang/fpm/pull/587))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:52
msgid ""
"update README.md compiler, archiver, & link flags ([#598](https://github.com"
"/fortran-lang/fpm/pull/598))"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:55
msgid "Feedback"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:57
msgid "[Discourse thread](https://fortran-lang.discourse.group/t/2314)"
msgstr ""

#: ../../pages/news/2021/11-21-fpm-version-0.5.0.md:58
msgid "[Twitter post](https://twitter.com/fortranlang/status/1462506491752161286)"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:7
msgid "Fpm version 0.6.0 released"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:9
msgid ""
"This release introduces a better visualization for the build output, compiler"
" output is only shown on error to keep the standard output clean for "
"successful builds. Furthermore, fpm can now detect unused modules and avoids "
"compiling modules that are not needed for an application, which improves the "
"compilation speed with large dependencies like stdlib. When creating a new "
"project with fpm the author information are now taken from the git "
"configuration to avoid using placeholders in the manifest. Several more bug "
"fixes and plenty of improvements went into this version as well."
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:14
msgid ""
"Find the full release notes [here](https://github.com/fortran-"
"lang/fpm/releases/tag/v0.6.0)."
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:16
msgid ""
"Many thanks to Pedro Costa ([@p-costa](https://github.com/p-costa)), "
"Sebastian Ehlert ([@awvwgk](https://github.com/awvwgk)), Laurence Kedward "
"([@lkedward](https://github.com/lkedward)), Wileam Y. Phan "
"([@wyphan](https://github.com/wyphan)), Arteev Raina "
"([@arteevraina](https://github.com/arteevraina)), Simon Rowe "
"([@wiremoons](https://github.com/wiremoons)), Andre Smit "
"([@freevryheid](https://github.com/freevryheid)), John Urban "
"([@urbanjost](https://github.com/urbanjost)), Zuo Zhihua "
"([@zoziha](https://github.com/zoziha)), [@st-maxwell](https://github.com/st-"
"maxwell), and [@noisegul](https://github.com/noisegul) for contributing "
"patches to this release."
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:19
#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:29
#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:34
#: ../../pages/news/2023/04-11-fpm-version-0.8.1.md:21
#: ../../pages/news/2023/05-11-fpm-version-0.8.2.md:20
msgid "Changelog"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:21
msgid ""
"Better extraction of the Fortran compiler from the MPI wrapper "
"([#634](https://github.com/fortran-lang/fpm/pull/634))"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:22
msgid ""
"Update module output directory command for flang-new/f18 "
"([#645](https://github.com/fortran-lang/fpm/pull/645))"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:23
msgid ""
"Respect user provided main-files ([#646](https://github.com/fortran-"
"lang/fpm/pull/646))"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:24
msgid ""
"just allow . on new subcommand instead of changing canonical path "
"([#630](https://github.com/fortran-lang/fpm/pull/630))"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:25
msgid ""
"get user name and email using git config if available else use defaults "
"([#652](https://github.com/fortran-lang/fpm/pull/652))"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:26
msgid ""
"Ignore hidden source files ([#654](https://github.com/fortran-"
"lang/fpm/pull/654))"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:27
msgid ""
"Cleanup the backend output ([#622](https://github.com/fortran-"
"lang/fpm/pull/622))"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:28
msgid ""
"Add note about relocation of manifest reference ([#648](https://github.com"
"/fortran-lang/fpm/pull/648))"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:29
msgid ""
"Fix for backtrace error when file not found in: `src/fpm_source_parsing.f90` "
"([#675](https://github.com/fortran-lang/fpm/pull/675))"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:30
msgid ""
"Fix issue with backend pretty output ([#677](https://github.com/fortran-"
"lang/fpm/pull/677))"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:31
msgid ""
"fix: remove remove unnecessary space in fpm new cmd "
"([#684](https://github.com/fortran-lang/fpm/pull/684))"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:32
msgid ""
"Small fix for `fpm_model` ([#688](https://github.com/fortran-"
"lang/fpm/pull/688))"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:33
msgid "add clean command ([#655](https://github.com/fortran-lang/fpm/pull/665))"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:34
msgid ""
"Fix for non-portable GFortran `-J` flag in install script "
"([#692](https://github.com/fortran-lang/fpm/pull/692))"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:35
msgid "Fix show-model option ([#693](https://github.com/fortran-lang/fpm/pull/693))"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:36
msgid ""
"Tree shaking for modules ([#676](https://github.com/fortran-"
"lang/fpm/pull/676))"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:37
msgid "Fix submodule shaking ([#704](https://github.com/fortran-lang/fpm/pull/704))"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:38
msgid ""
"fix: remove extra space from help-test cmd ([#686](https://github.com"
"/fortran-lang/fpm/pull/686))"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:39
msgid ""
"Fix: to pipe up-to-date message to stderr ([#706](https://github.com/fortran-"
"lang/fpm/pull/706))"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:40
msgid ""
"Avoid infinite loop if command \"fpm-\" is in path ([#713](https://github.com"
"/fortran-lang/fpm/pull/713))"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:41
msgid ""
"Fix --show-model, init `c_source%parent_modules` ([#712](https://github.com"
"/fortran-lang/fpm/pull/712))"
msgstr ""

#: ../../pages/news/2022/06-19-fpm-version-0.6.0.md:42
msgid ""
"Add OMP critical for `make_archive` ([#708](https://github.com/fortran-"
"lang/fpm/pull/708))"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:7
msgid "Fpm version 0.7.0 released"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:9
msgid ""
"This release introduces preprocessor support in the `fpm.toml` manifest, "
"allowing for preprocessor macros, file suffixes and directories where the "
"preprocessor should run. This feature was implemented as part of Arteev "
"Raina's Google Summer of Code 2022 project. Furthermore, fpm has now the "
"ability to compile C++ source files in addition to Fortran and C. Finally, "
"the ability to define compiler profiles in the `fpm.toml` manifest has been "
"added, although the profile settings are not currently used in the build "
"process."
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:16
msgid ""
"Find the full release notes [here](https://github.com/fortran-"
"lang/fpm/releases/tag/v0.7.0)."
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:18
msgid ""
"Many thanks to Lewis McMillan ([@lewisfish](https://github.com/lewisfish)), "
"Damian Rouson ([@rouson](https://github.com/rouson)), Giannis Nikiteas "
"([@gnikit](https://github.com/gnikit)), Laurence Kedward "
"([@LKedward](https://github.com/LKedward)), Sebastian Ehlert "
"([@awvwgk](https://github.com/awvwgk)), Zuo Zhihua "
"([@zoziha](https://github.com/zoziha)), Jakub Jelínek "
"([@kubajj](https://github.com/kubajj)), Arteev Raina "
"([@arteevraina](https://github.com/arteevraina)) for contributing patches to "
"this release."
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:31
msgid ""
"feat: added basic preprocess table configuration by in <https://github.com"
"/fortran-lang/fpm/pull/715>"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:32
msgid ""
"Add homebrew installation instructions to README.md by in <https://github.com"
"/fortran-lang/fpm/pull/718>"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:33
msgid ""
"Some cleanups and minor fixes by in <https://github.com/fortran-"
"lang/fpm/pull/701>"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:34
msgid ""
"feat: ability to read macros from manifest by in <https://github.com/fortran-"
"lang/fpm/pull/720>"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:35
msgid ""
"Support for dependency path relative to the fpm.toml it’s written in by in "
"<https://github.com/fortran-lang/fpm/pull/719>"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:36
msgid ""
"feat: added support for C++ files compilation by in <https://github.com"
"/fortran-lang/fpm/pull/733>"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:37
msgid "Fix executables linking by in <https://github.com/fortran-lang/fpm/pull/743>"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:38
msgid ""
"Change git directory using work-tree / git-dir by in <https://github.com"
"/fortran-lang/fpm/pull/747>"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:39
msgid ""
"Fix #734: First resolve dependencies, then resolve programs by in "
"<https://github.com/fortran-lang/fpm/pull/737>"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:40
msgid ""
"docs(README): improve Homebrew references by in <https://github.com/fortran-"
"lang/fpm/pull/745>"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:41
msgid "Minor fix for `fpm new` by in <https://github.com/fortran-lang/fpm/pull/739>"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:42
msgid ""
"docs: updated example packages README with new packages that were added by in"
" <https://github.com/fortran-lang/fpm/pull/740>"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:43
msgid "Enable profiles in toml by in <https://github.com/fortran-lang/fpm/pull/653>"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:44
msgid ""
"Updated URL to manifest file in help section by in <https://github.com"
"/fortran-lang/fpm/pull/755>"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:45
msgid "Fix compilation with NAG by in <https://github.com/fortran-lang/fpm/pull/753>"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:46
msgid ""
"Fixes #756: add judgement of macros allocation status by in "
"<https://github.com/fortran-lang/fpm/pull/762>"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:47
msgid ""
"In the default case of command line subcommands, stop `fpm` running in time "
"by in <https://github.com/fortran-lang/fpm/pull/728>"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:48
msgid ""
"Disallow C-style escaping for IBM XL compiler by in <https://github.com"
"/fortran-lang/fpm/pull/764>"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:49
msgid ""
"bug: C preprocessor does not propagate directives to executables by in "
"<https://github.com/fortran-lang/fpm/pull/775>"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:50
msgid ""
"bug: macros don't propage to C executables by in <https://github.com/fortran-"
"lang/fpm/pull/779>"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:51
msgid ""
"Enable cpp preprocessor flag for dependencies by in <https://github.com"
"/fortran-lang/fpm/pull/783>"
msgstr ""

#: ../../pages/news/2022/10-26-fpm-version-0.7.0.md:52
msgid "Bump version to 0.7.0 by in <https://github.com/fortran-lang/fpm/pull/785>"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:7
msgid "Fpm version 0.8.0 released"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:9
msgid ""
"This release introduces support for enabling and disabling language features "
"in fpm, such as implicit typing or default source form. By default, fpm now "
"tries to disable implicit typing rules, implicit external interfaces and "
"assumes the source form is always free. The options can be overwritten in the"
" manifest for each project."
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:13
msgid ""
"Furthermore, first support for local and remote registries are integrated in "
"fpm. The registry support can be configured in a new global configuration "
"file. This development was sponsored by the [Sovereign Tech "
"Fund](https://sovereigntechfund.de/en/projects/fortran/)."
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:17
msgid ""
"Bugfixes and improvements to the preprocessor support, C++ compilation, "
"dependency updates and more are included in this release."
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:19
msgid ""
"Find the full release notes [here](https://github.com/fortran-"
"lang/fpm/releases/tag/v0.8.0)."
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:21
msgid ""
"Many thanks to Aarush Bhat ([@sloorush](https://github.com/sloorush)), Minh "
"Dao ([@minhqdao](https://github.com/minhqdao)), Sebastian Ehlert "
"([@awvwgk](https://github.com/awvwgk)), Sergey Fedorov "
"([@barracuda156](https://github.com/barracuda156)), Sebastien Marie "
"([@semarie](https://github.com/semarie)), Giannis Nikiteas "
"([@gnikit](https://github.com/gnikit)), Federico Perini "
"([@perazz](https://github.com/perazz)), Ivan Pribec ([@ivan-"
"pi](https://github.com/ivan-pi)), John Urban "
"([@urbanjost](https://github.com/urbanjost)), Zuo Zhihua "
"([@zoziha](https://github.com/zoziha)) for contributing patches to this "
"release."
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:36
msgid ""
"Set C++ compiler to clang++ in [fpm#787](https://github.com/fortran-"
"lang/fpm/pull/787)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:37
msgid ""
"Document ``FPM_CXX``, ``FPM_CXXFLAGS`` and options in "
"[fpm#788](https://github.com/fortran-lang/fpm/pull/788)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:38
msgid ""
"Simplify and update README in [fpm#778](https://github.com/fortran-"
"lang/fpm/pull/778)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:39
msgid ""
"Add C++ flags to profiles in [fpm#786](https://github.com/fortran-"
"lang/fpm/pull/786)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:40
msgid ""
"fix 32-bit platform issues with M\\_CLI2 in [fpm#796](https://github.com"
"/fortran-lang/fpm/pull/796)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:41
msgid ""
"Fix missing space before -D option for preprocessor in "
"[fpm#804](https://github.com/fortran-lang/fpm/pull/804)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:42
msgid ""
"Do not pass in quotes in manifest tests in [fpm#806](https://github.com"
"/fortran-lang/fpm/pull/806)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:43
msgid ""
"Improve error handling for invalid ``git`` dependencies in "
"[fpm#797](https://github.com/fortran-lang/fpm/pull/797)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:44
msgid ""
"Lower windows check precedence in ``get_os_type`` function in "
"[fpm#802](https://github.com/fortran-lang/fpm/pull/802)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:45
msgid ""
"Fix broken links to webpage in [fpm#826](https://github.com/fortran-"
"lang/fpm/pull/826)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:46
msgid ""
"Consistently call ``execute_command_line`` from the ``run`` wrapper in "
"[fpm#832](https://github.com/fortran-lang/fpm/pull/832)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:47
msgid ""
"Fix the build on macOS PPC in [fpm#824](https://github.com/fortran-"
"lang/fpm/pull/824)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:48
msgid ""
"Query latest release from GitHub in [fpm#818](https://github.com/fortran-"
"lang/fpm/pull/818)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:49
msgid ""
"Add missing dollar sign in OpenMP directive in [fpm#841](https://github.com"
"/fortran-lang/fpm/pull/841)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:50
msgid ""
"Fix query for latest release from GitHub on missing curl in "
"[fpm#839](https://github.com/fortran-lang/fpm/pull/839) and "
"[fpm#842](https://github.com/fortran-lang/fpm/pull/842)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:51
msgid ""
"Fix unallocated model variables in the testsuite (#844) in "
"[fpm#845](https://github.com/fortran-lang/fpm/pull/845)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:52
msgid ""
"Add wait when linking library with \\*.resp file in "
"[fpm#808](https://github.com/fortran-lang/fpm/pull/808)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:53
msgid ""
"Add option to enforce module naming in [fpm#828](https://github.com/fortran-"
"lang/fpm/pull/828)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:54
msgid ""
"Fix unhandled error branch in [fpm#849](https://github.com/fortran-"
"lang/fpm/pull/849)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:55
msgid ""
"Automated dependency tree update in [fpm#843](https://github.com/fortran-"
"lang/fpm/pull/843)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:56
msgid ""
"Return program's exit code from fpm run in [fpm#852](https://github.com"
"/fortran-lang/fpm/pull/852) and [fpm#](https://github.com/fortran-"
"lang/fpm/pull/858)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:57
msgid ""
"Update gcc version to 10 for CI in [fpm#857](https://github.com/fortran-"
"lang/fpm/pull/857)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:58
msgid ""
"Fix macOS CI for fpm-bootstrap executables built with gcc-9 in "
"[fpm#861](https://github.com/fortran-lang/fpm/pull/861)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:59
msgid ""
"Update TOML Fortran to version 0.4.0 in [fpm#862](https://github.com/fortran-"
"lang/fpm/pull/862)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:60
msgid ""
"Add support for toggling Fortran features in [fpm#864](https://github.com"
"/fortran-lang/fpm/pull/864)"
msgstr ""

#: ../../pages/news/2023/04-07-fpm-version-0.8.0.md:61
msgid ""
"Add global configuration file and support local and remote registry "
"[fpm#817](https://github.com/fortran-lang/fpm/pull/817)"
msgstr ""

#: ../../pages/news/2023/04-11-fpm-version-0.8.1.md:7
msgid "Fpm version 0.8.1 released"
msgstr ""

#: ../../pages/news/2023/04-11-fpm-version-0.8.1.md:9
msgid ""
"This release introduces a hotfix for the automated dependency tree feature "
"introduced in [v0.8.0](https://github.com/fortran-"
"lang/fpm/releases/tag/v0.8.0). Fpm now restored backward-compatible "
"dependency priority, which ensures that, whenever different versions of the "
"same dependency are found down the dependency tree, the first and foremost is"
" used. Unnecessary dependency updates are also shed from the build process."
msgstr ""

#: ../../pages/news/2023/04-11-fpm-version-0.8.1.md:13
msgid ""
"Find the full release notes [here](https://github.com/fortran-"
"lang/fpm/releases/tag/v0.8.1)."
msgstr ""

#: ../../pages/news/2023/04-11-fpm-version-0.8.1.md:15
msgid ""
"Many thanks to Sebastian Ehlert ([@awvwgk](https://github.com/awvwgk)), Brad "
"Richardson "
"([@everythingfunctional](https://github.com/everythingfunctional)), John "
"Urban ([@urbanjost](https://github.com/urbanjost)), for testing the new "
"release and allowing this hotfix to be deployed quickly."
msgstr ""

#: ../../pages/news/2023/04-11-fpm-version-0.8.1.md:23
msgid ""
"Only update dependencies between cached build and manifest (fix) by @perazz "
"in [fpm#871](https://github.com/fortran-lang/fpm/pull/871)"
msgstr ""

#: ../../pages/news/2023/04-11-fpm-version-0.8.1.md:24
msgid ""
"Print dependency update messages on verbosity>0 (fix) by @perazz in "
"[fpm#873](https://github.com/fortran-lang/fpm/pull/873)"
msgstr ""

#: ../../pages/news/2023/04-11-fpm-version-0.8.1.md:25
msgid ""
"Automated dependency update: restore deterministic behavior by @perazz in "
"[fpm#875](https://github.com/fortran-lang/fpm/pull/875)"
msgstr ""

#: ../../pages/news/2023/05-11-fpm-version-0.8.2.md:7
msgid "Fpm version 0.8.2 released"
msgstr ""

#: ../../pages/news/2023/05-11-fpm-version-0.8.2.md:9
msgid "Registry preview release."
msgstr ""

#: ../../pages/news/2023/05-11-fpm-version-0.8.2.md:11
msgid ""
"This release introduces fpm support for uploading packages to the fpm-"
"registry server directly from the command-line interface, via"
msgstr ""

#: ../../pages/news/2023/05-11-fpm-version-0.8.2.md:15
msgid ""
"fpm will now interact with a web interface that will help to manage the "
"namespaces & packages. The release includes furhter bugfixes and extensions "
"for C/C++ support as detailed in the changelog."
msgstr ""

#: ../../pages/news/2023/05-11-fpm-version-0.8.2.md:18
msgid ""
"Thanks to [@minhqdao](https://github.com/minhqdao), "
"[@perazz](https://github.com/perazz) and everyone who contributed to this "
"release! This release was supported by the Sovereign Tech Fund "
"([STF](https://sovereigntechfund.de/de/))."
msgstr ""

#: ../../pages/news/2023/05-11-fpm-version-0.8.2.md:22
msgid "Not store temporary data in .local (#900) by @minhqdao"
msgstr ""

#: ../../pages/news/2023/05-11-fpm-version-0.8.2.md:23
msgid "Add flags to link main programs with C/C++ main (#896) by @perazz"
msgstr ""

#: ../../pages/news/2023/05-11-fpm-version-0.8.2.md:24
msgid "replace unix with is_unix to avoid intel fpp collisions (#894) by @perazz"
msgstr ""

#: ../../pages/news/2023/05-11-fpm-version-0.8.2.md:25
msgid "Fix bootstrapping on Windows (#892) by @minhqdao"
msgstr ""

#: ../../pages/news/2023/05-11-fpm-version-0.8.2.md:26
msgid "Improve error message for [build] structure errors (#890) by @perazz"
msgstr ""

#: ../../pages/news/2023/05-11-fpm-version-0.8.2.md:27
msgid "Fix multiple installs (#888) by @perazz"
msgstr ""

#: ../../pages/news/2023/05-11-fpm-version-0.8.2.md:28
msgid "Fix --show-package-version (#887) by @minhqdao"
msgstr ""

#: ../../pages/news/2023/05-11-fpm-version-0.8.2.md:29
msgid "Update Windows CI image compiler to MinGW gfortran 10.4.0 (#881) by @perazz"
msgstr ""

#: ../../pages/news/2023/05-11-fpm-version-0.8.2.md:30
msgid "Implement fpm publish (#876) by @minhqdao"
msgstr ""

#: ../../pages/news/2023/05-11-fpm-version-0.8.2.md:31
msgid "Automated dependency update: restore deterministic behavior (#875) by @perazz"
msgstr ""

#: ../../pages/news/2023/05-11-fpm-version-0.8.2.md:33
msgid ""
"**Full Changelog**: https://github.com/fortran-"
"lang/fpm/compare/v0.8.1...v0.8.2"
msgstr ""

#: ../../pages/registry/index.rst:4
msgid ""
"Welcome to the package registry for the Fortran package manager. All "
"currently registered packages can be found here."
msgstr ""

#: ../../pages/registry/index.rst:9
msgid ""
"Your project is not listed? Submit a request at `fortran-lang/fpm-registry "
"<https://github.com/fortran-lang/fpm-registry>`_!"
msgstr ""

#: ../../pages/spec/index.md:13
msgid "API documentation"
msgstr ""

#: ../../pages/spec/index.md:3
msgid "Specifications and Reference"
msgstr ""

#: ../../pages/spec/index.md:6
msgid ""
"This section contains the specifications the components of the Fortran "
"Package Manager."
msgstr ""

#: ../../pages/spec/index.md:10
msgid ""
"The generated API documentation of the fpm internals can be found "
"[here](https://fortran-lang.github.io/fpm)."
msgstr ""

#: ../../pages/spec/manifest.md:1
msgid "Manifest reference"
msgstr ""

#: ../../pages/spec/manifest.md:3
msgid ""
"The ``fpm.toml`` file for each project is called its *manifest*. It is "
"written using the [TOML] format. Every manifest file consists of the "
"following sections:"
msgstr ""

#: ../../pages/spec/manifest.md:7
msgid "[*name*](#project-name): The name of the project"
msgstr ""

#: ../../pages/spec/manifest.md:9
msgid "[*version*](#project-version): The version of the project"
msgstr ""

#: ../../pages/spec/manifest.md:11
msgid "[*license*](#project-license): The project license"
msgstr ""

#: ../../pages/spec/manifest.md:13
msgid "[*maintainer*](#project-maintainer): Maintainer of the project"
msgstr ""

#: ../../pages/spec/manifest.md:15
msgid "[*author*](#project-author): Author of the project"
msgstr ""

#: ../../pages/spec/manifest.md:17
msgid "[*copyright*](#project-copyright): Copyright of the project"
msgstr ""

#: ../../pages/spec/manifest.md:19
msgid "[*description*](#project-description): Description of the project"
msgstr ""

#: ../../pages/spec/manifest.md:21
msgid "[*categories*](#project-categories): Categories associated with the project"
msgstr ""

#: ../../pages/spec/manifest.md:23
msgid "[*keywords*](#project-keywords): Keywords describing the project"
msgstr ""

#: ../../pages/spec/manifest.md:25
msgid "[*homepage*](#project-homepage): The project's homepage"
msgstr ""

#: ../../pages/spec/manifest.md:27
msgid "Build configuration:"
msgstr ""

#: ../../pages/spec/manifest.md:28
msgid ""
"[*auto-tests*](#automatic-target-discovery): Toggle automatic discovery of "
"test executables"
msgstr ""

#: ../../pages/spec/manifest.md:30
msgid ""
"[*auto-examples*](#automatic-target-discovery): Toggle automatic discovery of"
" example programs"
msgstr ""

#: ../../pages/spec/manifest.md:32
msgid ""
"[*auto-executables*](#automatic-target-discovery): Toggle automatic discovery"
" of executables"
msgstr ""

#: ../../pages/spec/manifest.md:34
msgid "[*link*](#link-external-libraries): Link with external dependencies"
msgstr ""

#: ../../pages/spec/manifest.md:36
msgid ""
"[*external-modules*](#use-system-installed-modules): Specify modules used "
"that are not within your fpm package"
msgstr ""

#: ../../pages/spec/manifest.md:38
msgid "Fortran configuration:"
msgstr ""

#: ../../pages/spec/manifest.md:39
msgid "[*implicit-typing*](#implicit-typing): Toggle default implicit typing"
msgstr ""

#: ../../pages/spec/manifest.md:41
msgid "[*implicit-external*](#implicit-external): Toggle implicit external interfaces"
msgstr ""

#: ../../pages/spec/manifest.md:43
msgid "[*source-form*](#source-form): Select source form for project"
msgstr ""

#: ../../pages/spec/manifest.md:45
msgid "Target sections:"
msgstr ""

#: ../../pages/spec/manifest.md:46
msgid "[*library*](#library-configuration) Configuration of the library target"
msgstr ""

#: ../../pages/spec/manifest.md:48
msgid "[*executable*](#executable-targets) Configuration of the executable targets"
msgstr ""

#: ../../pages/spec/manifest.md:50
msgid "[*test*](#test-targets) Configuration of the test targets"
msgstr ""

#: ../../pages/spec/manifest.md:52
msgid "Dependency sections:"
msgstr ""

#: ../../pages/spec/manifest.md:53
msgid "[*dependencies*](#specifying-dependencies): Project library dependencies"
msgstr ""

#: ../../pages/spec/manifest.md:55
msgid ""
"[*dev-dependencies*](#development-dependencies): Dependencies only needed for"
" tests"
msgstr ""

#: ../../pages/spec/manifest.md:57
msgid "[*install*](#installation-configuration): Installation configuration"
msgstr ""

#: ../../pages/spec/manifest.md:59
msgid "[*preprocess*](#preprocessor-configuration) Preprocessor configuration"
msgstr ""

#: ../../pages/spec/manifest.md:61
msgid "[*extra*](#additional-free-data-field): Additional free data field"
msgstr ""

#: ../../pages/spec/manifest.md:68
msgid "Project name"
msgstr ""

#: ../../pages/spec/manifest.md:70
msgid ""
"The project name identifies the package and is used to refer to it. It is "
"used when listing the project as dependency for another package and the "
"default name of the library and executable target. Therefore, the project "
"name must always be present."
msgstr ""

#: ../../pages/spec/manifest.md:74 ../../pages/spec/manifest.md:86
#: ../../pages/spec/manifest.md:94 ../../pages/spec/manifest.md:129
#: ../../pages/spec/manifest.md:140 ../../pages/spec/manifest.md:151
#: ../../pages/spec/manifest.md:163 ../../pages/spec/manifest.md:174
#: ../../pages/spec/manifest.md:185 ../../pages/spec/manifest.md:196
#: ../../pages/spec/manifest.md:216 ../../pages/spec/manifest.md:234
#: ../../pages/spec/manifest.md:265 ../../pages/spec/manifest.md:309
#: ../../pages/spec/manifest.md:345 ../../pages/spec/manifest.md:372
#: ../../pages/spec/manifest.md:400 ../../pages/spec/manifest.md:409
#: ../../pages/spec/naming.md:157
msgid "*Example:*"
msgstr ""

#: ../../pages/spec/manifest.md:81
msgid "Project version"
msgstr ""

#: ../../pages/spec/manifest.md:83
msgid ""
"The version number of the project is specified as string. A standardized way "
"to manage and specify versions is the [Semantic Versioning] scheme."
msgstr ""

#: ../../pages/spec/manifest.md:92
msgid ""
"The version entry can also contain a filename relative to the project root, "
"which contains the version number of the project"
msgstr ""

#: ../../pages/spec/manifest.md:103
msgid "Project license"
msgstr ""

#: ../../pages/spec/manifest.md:105
msgid ""
"The project license field contains the license identifier. A standardized way"
" to specify licensing information are [SPDX] identifiers."
msgstr ""

#: ../../pages/spec/manifest.md:108
msgid "*Examples:*"
msgstr ""

#: ../../pages/spec/manifest.md:110
msgid ""
"Projects licensed under the [GNU Lesser General Public "
"License](https://www.gnu.org/licenses/lgpl-3.0-standalone.html), either "
"version 3 or any later version, is specified as"
msgstr ""

#: ../../pages/spec/manifest.md:116
msgid ""
"Dual licensed project under the [Apache license, version "
"2.0](http://www.apache.org/licenses/LICENSE-2.0) or the [MIT "
"license](https://opensource.org/licenses/MIT) are specified as"
msgstr ""

#: ../../pages/spec/manifest.md:125
msgid "Project maintainer"
msgstr ""

#: ../../pages/spec/manifest.md:127
msgid "Information on the project maintainer and means to reach out to them."
msgstr ""

#: ../../pages/spec/manifest.md:136
msgid "Project author"
msgstr ""

#: ../../pages/spec/manifest.md:138
msgid "Information on the project author."
msgstr ""

#: ../../pages/spec/manifest.md:147
msgid "Project copyright"
msgstr ""

#: ../../pages/spec/manifest.md:149
msgid "A statement clarifying the copyright status of the project."
msgstr ""

#: ../../pages/spec/manifest.md:158
msgid "Project description"
msgstr ""

#: ../../pages/spec/manifest.md:160
msgid ""
"The description provides a short summary on the project. It should be plain "
"text and not using any markup formatting."
msgstr ""

#: ../../pages/spec/manifest.md:170
msgid "Project categories"
msgstr ""

#: ../../pages/spec/manifest.md:172
msgid "The project can be associated with different categories."
msgstr ""

#: ../../pages/spec/manifest.md:181
msgid "Project keywords"
msgstr ""

#: ../../pages/spec/manifest.md:183
msgid "The keywords field is an array of strings describing the project."
msgstr ""

#: ../../pages/spec/manifest.md:192
msgid "Project homepage"
msgstr ""

#: ../../pages/spec/manifest.md:194
msgid "URL to the webpage of the project."
msgstr ""

#: ../../pages/spec/manifest.md:203
msgid "Project targets"
msgstr ""

#: ../../pages/spec/manifest.md:205
msgid ""
"Every fpm project can define library, executable and test targets. Library "
"targets are exported and useable for other projects."
msgstr ""

#: ../../pages/spec/manifest.md:209
msgid "Library configuration"
msgstr ""

#: ../../pages/spec/manifest.md:211
msgid ""
"Defines the exported library target of the project. A library is generated if"
" the source directory or include directory is found in a project. The default"
" source and include directories are ``src`` and ``include``; these can be "
"modified in the *library* section using the *source-dir* and *include-dir* "
"entries. Paths for the source and include directories are given relative to "
"the project root and use ``/`` as path separator on all platforms."
msgstr ""

#: ../../pages/spec/manifest.md:224
msgid "Include directory"
msgstr ""

#: ../../pages/spec/manifest.md:227 ../../pages/spec/manifest.md:364
#: ../../pages/spec/manifest.md:419
msgid "Supported in Fortran fpm only"
msgstr ""

#: ../../pages/spec/manifest.md:230
msgid ""
"Projects which use the Fortran `include` statement or C preprocessor "
"`#include` statement, can use the *include-dir* key to specify search "
"directories for the included files. *include-dir* can contain one or more "
"directories, where multiple directories are specified using a list of "
"strings. Include directories from all project dependencies are passed to the "
"compiler using the appropriate compiler flag."
msgstr ""

#: ../../pages/spec/manifest.md:242
msgid "*include-dir* does not currently allow using pre-built module `.mod` files"
msgstr ""

#: ../../pages/spec/manifest.md:246
msgid "Executable targets"
msgstr ""

#: ../../pages/spec/manifest.md:248
msgid ""
"Executable targets are Fortran programs defined as *executable* sections. If "
"no executable section is specified the ``app`` directory is searched for "
"program definitions. For explicitly specified executables the *name* entry "
"must always be specified. The source directory for each executable can be "
"adjusted in the *source-dir* entry. Paths for the source directory are given "
"relative to the project root and use ``/`` as path separator on all "
"platforms. The source file containing the program body can be specified in "
"the *main* entry."
msgstr ""

#: ../../pages/spec/manifest.md:255
msgid ""
"Executables can have their own dependencies. See [specifying dependencies"
"](#specifying-dependencies) for more details."
msgstr ""

#: ../../pages/spec/manifest.md:258
msgid ""
"Executables can also specify their own external library dependencies. See "
"[external libraries](#link-external-libraries) for more details."
msgstr ""

#: ../../pages/spec/manifest.md:262 ../../pages/spec/manifest.md:306
#: ../../pages/spec/manifest.md:342
msgid "Linking against libraries is supported in Fortran fpm only"
msgstr ""

#: ../../pages/spec/manifest.md:280
msgid ""
"Specifying many separate executables can be done by using inline tables for "
"brevity instead"
msgstr ""

#: ../../pages/spec/manifest.md:290
msgid "Example targets"
msgstr ""

#: ../../pages/spec/manifest.md:292
msgid ""
"Example applications for a project are defined as *example* sections. If no "
"example section is specified the ``example`` directory is searched for "
"program definitions. For explicitly specified examples the *name* entry must "
"always be specified. The source directory for each example can be adjusted in"
" the *source-dir* entry. Paths for the source directory are given relative to"
" the project root and use ``/`` as path separator on all platforms. The "
"source file containing the program body can be specified in the *main* entry."
msgstr ""

#: ../../pages/spec/manifest.md:299
msgid ""
"Examples can have their own dependencies. See [specifying dependencies"
"](#specifying-dependencies) for more details."
msgstr ""

#: ../../pages/spec/manifest.md:302
msgid ""
"Examples can also specify their own external library dependencies. See "
"[external libraries](#link-external-libraries) for more details."
msgstr ""

#: ../../pages/spec/manifest.md:325
msgid "Test targets"
msgstr ""

#: ../../pages/spec/manifest.md:327
msgid ""
"Test targets are Fortran programs defined as *test* sections. They follow "
"similar rules as the executable targets. If no test section is specified the "
"``test`` directory is searched for program definitions. For explicitly "
"specified tests the *name* entry must always be specified. The source "
"directory for each test can be adjusted in the *source-dir* entry. Paths for "
"the source directory are given relative to the project root and use ``/`` as "
"path separator on all platforms. The source file containing the program body "
"can be specified in the *main* entry."
msgstr ""

#: ../../pages/spec/manifest.md:335
msgid ""
"Tests can have their own dependencies. See [specifying dependencies"
"](#specifying-dependencies) for more details."
msgstr ""

#: ../../pages/spec/manifest.md:338
msgid ""
"Tests can also specify their own external library dependencies. See [external"
" libraries](#link-external-libraries) for more details."
msgstr ""

#: ../../pages/spec/manifest.md:361
msgid "Link external libraries"
msgstr ""

#: ../../pages/spec/manifest.md:367
msgid ""
"To declare link time dependencies on external libraries a list of native "
"libraries can be specified in the *link* entry. Specify either one library as"
" string or a list of strings in case several libraries should be linked. When"
" possible the project should only link one native library. The list of "
"library dependencies is exported to dependent packages."
msgstr ""

#: ../../pages/spec/manifest.md:374
msgid "To link against the zlib compression library use"
msgstr ""

#: ../../pages/spec/manifest.md:381
msgid ""
"To dependent on LAPACK also BLAS should be linked. In this case the order of "
"the libraries matters:"
msgstr ""

#: ../../pages/spec/manifest.md:389
msgid "Use system-installed modules"
msgstr ""

#: ../../pages/spec/manifest.md:391
msgid ""
"To use modules that are not defined within your fpm package or its "
"dependencies, specify the module name using the *external-modules* key in the"
" *build* table."
msgstr ""

#: ../../pages/spec/manifest.md:395
msgid ""
"*fpm* cannot automatically locate external module files; it is the "
"responsibility of the user to specify the necessary include directories using"
" compiler flags such that the compiler can locate external module files "
"during compilation."
msgstr ""

#: ../../pages/spec/manifest.md:407
msgid "Multiple external modules can be specified as a list."
msgstr ""

#: ../../pages/spec/manifest.md:416
msgid "Automatic target discovery"
msgstr ""

#: ../../pages/spec/manifest.md:422
msgid ""
"Executables and test can be discovered automatically in their default "
"directories. The automatic discovery recursively searches the ``app``, "
"``example``, and ``test`` directories for ``program`` definitions and "
"declares them as executable, example, and test targets, respectively. The "
"automatic discovery is enabled by default."
msgstr ""

#: ../../pages/spec/manifest.md:426
msgid ""
"To disable the automatic discovery of targets set the *auto-executables*, "
"*auto-examples*, and *auto-tests* entry to *false*."
msgstr ""

#: ../../pages/spec/manifest.md:436
msgid "Fortran features"
msgstr ""

#: ../../pages/spec/manifest.md:438
msgid "Allows to enable and disable specific language features"
msgstr ""

#: ../../pages/spec/manifest.md:441
msgid "Implicit typing"
msgstr ""

#: ../../pages/spec/manifest.md:443
msgid ""
"Allows to toggle whether the default implicit typing should be used. The "
"default option is ``false``."
msgstr ""

#: ../../pages/spec/manifest.md:452
msgid "Implicit external"
msgstr ""

#: ../../pages/spec/manifest.md:454
msgid ""
"Allows to toggle whether external interfaces can be declared implicitly. The "
"default option is ``false``."
msgstr ""

#: ../../pages/spec/manifest.md:463
msgid "Source form"
msgstr ""

#: ../../pages/spec/manifest.md:465
msgid ""
"Allows to specifiy the source form to be used for all files in the project. "
"Possible choices are ``\"free\"`` to assume all files are free form source, "
"``\"fixed\"`` to assume all files are fixed form source, and ``\"default\"`` "
"to let the compiler decide based on its own heuristics. The default option is"
" ``\"free\"``."
msgstr ""

#: ../../pages/spec/manifest.md:477
msgid "Specifying dependencies"
msgstr ""

#: ../../pages/spec/manifest.md:479
msgid ""
"Dependencies can be declared in the *dependencies* table in the manifest root"
" or the [*executable*](#executable-targets) or [*test*](#test-targets) "
"sections. When declared in the manifest root the dependencies are exported "
"with the project."
msgstr ""

#: ../../pages/spec/manifest.md:483
msgid "Local dependencies"
msgstr ""

#: ../../pages/spec/manifest.md:485
msgid "To declare local dependencies use the *path* entry."
msgstr ""

#: ../../pages/spec/manifest.md:492
msgid ""
"The local dependency path is given relative to the ``fpm.toml`` it is written"
" to, and uses ``/`` as the path separator on all platforms."
msgstr ""

#: ../../pages/spec/manifest.md:494
msgid "Global config file"
msgstr ""

#: ../../pages/spec/manifest.md:496
msgid ""
"The global configuration file can be used to set default options across all "
"fpm projects on the system. It is, by default, located at "
"`~/.local/share/fpm/config.toml` on Unix-like machines and "
"`%APPDATA%\\local\\fpm\\config.toml` on Windows and must be parsable to a "
"TOML structure. It can be used to configure [registry settings](#registry-"
"settings)."
msgstr ""

#: ../../pages/spec/manifest.md:498
msgid "Registry settings"
msgstr ""

#: ../../pages/spec/manifest.md:500
msgid ""
"The registry settings can be used to customize the registry for all projects."
" If no registry is specified, the packages will be fetched via HTTP from the "
"[official registry](https://registry-frontend.vercel.app/). The registry "
"settings are specified in the [global config file](#global-config-file)."
msgstr ""

#: ../../pages/spec/manifest.md:502
msgid "Registry cache"
msgstr ""

#: ../../pages/spec/manifest.md:504
msgid ""
"The registry cache contains the source code of previously downloaded "
"packages. It will first be searched for existing packages that satify the "
"requirements of the requesting project before the package is downloaded. The "
"default cache location is `~/.local/share/fpm/dependencies` on Unix-like "
"machines and `%APPDATA%\\local\\fpm\\dependencies` on Windows. The location "
"of the cache can be changed by setting the `cache_path` in the global config "
"file:"
msgstr ""

#: ../../pages/spec/manifest.md:512
msgid "Custom registry"
msgstr ""

#: ../../pages/spec/manifest.md:514
msgid ""
"If you want to use a custom registry, you can specify it in the global config"
" file:"
msgstr ""

#: ../../pages/spec/manifest.md:521
msgid ""
"Your registry must implement the same [API](https://registry-"
"apis.vercel.app/apidocs/) as the official registry."
msgstr ""

#: ../../pages/spec/manifest.md:523
msgid "Local registry"
msgstr ""

#: ../../pages/spec/manifest.md:525
msgid "Use the following configuration if you want to set up a local registry:"
msgstr ""

#: ../../pages/spec/manifest.md:532
msgid ""
"fpm will search this directory for packages and will not download packages "
"from the internet or fetch packages from the cache."
msgstr ""

#: ../../pages/spec/manifest.md:534
msgid ""
"The directory must be structured the way fpm expects it to be. A package must"
" be located in a directory named after the namespace name, followed by the "
"name of the package and the package version. For example, the package `my-"
"package` with version `0.1.0`, which is part of `my-namespace`, must be "
"located in the directory `<path_to_local_registry>/my-namespace/my-"
"package/0.1.0` on Unix-like systems. The package directory must contain an "
"`fpm.toml` file that has the package metadata. The manifest must therefore be"
" located at `<path_to_local_registry>/my-namespace/my-"
"package/0.1.0/fpm.toml`."
msgstr ""

#: ../../pages/spec/manifest.md:536
msgid ""
"If a specific [version](#version) is requested, fpm will look for that "
"version in the local registry. If you do not specify a version, fpm will look"
" for the version with the highest precedence."
msgstr ""

#: ../../pages/spec/manifest.md:538
msgid "Dependencies from version control systems"
msgstr ""

#: ../../pages/spec/manifest.md:540
msgid "Dependencies can be specified by the projects git repository."
msgstr ""

#: ../../pages/spec/manifest.md:547
msgid "To use a specific upstream branch declare the *branch* name with"
msgstr ""

#: ../../pages/spec/manifest.md:554
msgid "Alternatively, reference tags by using the *tag* entry"
msgstr ""

#: ../../pages/spec/manifest.md:561
msgid "To pin a specific revision specify the commit hash in the *rev* entry"
msgstr ""

#: ../../pages/spec/manifest.md:568
msgid ""
"For more verbose layout use normal tables rather than inline tables to "
"specify dependencies"
msgstr ""

#: ../../pages/spec/manifest.md:576
msgid "Dependencies from a registry"
msgstr ""

#: ../../pages/spec/manifest.md:578 ../../pages/spec/publish.md:13
msgid "Namespace"
msgstr ""

#: ../../pages/spec/manifest.md:580
msgid ""
"Packages obtained from a registry (both remote and local) are required to "
"specify a namespace, which provides a way to uniquely identify and "
"differentiate packages with identical names. The namespace is declared in the"
" manifest (`fpm.toml`)."
msgstr ""

#: ../../pages/spec/manifest.md:587
msgid ""
"This will prompt fpm to download the newest version of \"my-package\", which "
"belongs to \"my-namespace\", from the registry."
msgstr ""

#: ../../pages/spec/manifest.md:589 ../../pages/spec/publish.md:21
msgid "Version"
msgstr ""

#: ../../pages/spec/manifest.md:591
msgid ""
"If you want to download a specific version of a package instead of the newest"
" one available, you can specify the version (`v`) in the manifest."
msgstr ""

#: ../../pages/spec/manifest.md:599
msgid "Development dependencies"
msgstr ""

#: ../../pages/spec/manifest.md:601
msgid ""
"Development dependencies allow to declare *dev-dependencies* in the manifest "
"root, which are available to all tests but not exported with the project."
msgstr ""

#: ../../pages/spec/manifest.md:604
msgid "Installation configuration"
msgstr ""

#: ../../pages/spec/manifest.md:606
msgid ""
"In the *install* section components for the installation can be selected. By "
"default only executables are installed, library projects can set the "
"*library* boolean to also installatation the module files and the archive."
msgstr ""

#: ../../pages/spec/manifest.md:609 ../../pages/spec/manifest.md:625
#: ../../pages/spec/manifest.md:634 ../../pages/spec/manifest.md:644
#: ../../pages/spec/manifest.md:654 ../../pages/spec/manifest.md:664
#: ../../pages/spec/manifest.md:674 ../../pages/spec/manifest.md:685
#: ../../pages/spec/manifest.md:694
msgid "*Example*"
msgstr ""

#: ../../pages/spec/manifest.md:616
msgid "Preprocessor configuration"
msgstr ""

#: ../../pages/spec/manifest.md:618
msgid ""
"Under the *preprocess* section, you can specify one or more preprocessor to "
"use in an fpm project."
msgstr ""

#: ../../pages/spec/manifest.md:620
msgid "Specifying the preprocessor"
msgstr ""

#: ../../pages/spec/manifest.md:622
msgid ""
"The *preprocess* section allows one or more preprocessors to be specified. "
"For example, ```cpp``` can be specified like this :"
msgstr ""

#: ../../pages/spec/manifest.md:632
msgid ""
"To use multiple preprocessors, for example ```cpp``` and ```fypp```, specify "
"them like this:"
msgstr ""

#: ../../pages/spec/manifest.md:642
msgid "You can also specify source file suffixes that the preprocessor should run on:"
msgstr ""

#: ../../pages/spec/manifest.md:652
msgid ""
"Further, you can instruct the preprocessor to run on source files in specific"
" directories:"
msgstr ""

#: ../../pages/spec/manifest.md:662
msgid "Preprocessor macros can be defined like this:"
msgstr ""

#: ../../pages/spec/manifest.md:672
msgid "We can also use dotted keys to define our preprocessor settings."
msgstr ""

#: ../../pages/spec/manifest.md:683
msgid "We can also define valued macros in preprocess table."
msgstr ""

#: ../../pages/spec/manifest.md:692
msgid ""
"We can also reuse values like version number from manifest as a value for a "
"macro."
msgstr ""

#: ../../pages/spec/manifest.md:703
msgid "Additional free data field"
msgstr ""

#: ../../pages/spec/manifest.md:705
msgid ""
"Third-party tools can store their configuration inside the *extra* section. "
"This section will never be evaluated by fpm itself, the only constraint "
"imposed is that it has to be valid TOML."
msgstr ""

#: ../../pages/spec/manifest.md:708
msgid ""
"Since the format of this section is free, only recommendations are provided "
"here for adding data to the *extra* section."
msgstr ""

#: ../../pages/spec/manifest.md:710
msgid ""
"Only use subtables, never add configuration data to the top level of the "
"*extra* section. Reasoning: different tools can avoid collisions of key names"
" by placing their data in separate subtables."
msgstr ""

#: ../../pages/spec/manifest.md:712
msgid ""
"Use the concrete name of the tool rather than a generic name for the "
"subtable. Reasoning: different formatter or linter tools might use "
"conflicting keywords in a *format* or *lint* subtable. Also, users can tell "
"from the table name which tool is preferred to use with the project."
msgstr ""

#: ../../pages/spec/manifest.md:715
msgid ""
"Fpm plugins should use a subtable with their plugin name in the *extra.fpm* "
"section to store their data. Reasoning: following this convention provides "
"the user of fpm plugins with one section to configure their used plugins."
msgstr ""

#: ../../pages/spec/manifest.md:717
msgid ""
"Use the fpm preferred style for keywords which is lowercase with dashes. "
"Reasoning: while there is no style check in this section, a consistent style "
"in the whole manifest will make it easier for the user to understand the "
"whole package manifest."
msgstr ""

#: ../../pages/spec/manifest.md:720
msgid ""
"Feedback for the recommendations above is very much welcome. If you have a "
"tool that uses the *extra* section in the package manifest, feel free to post"
" it in at the [fpm discussion board](https://github.com/fortran-"
"lang/fpm/discussions)."
msgstr ""

#: ../../pages/spec/naming.md:1
msgid "Module name requirements"
msgstr ""

#: ../../pages/spec/naming.md:4
msgid ""
"Module naming requirements only apply to packages which are uploaded to a fpm"
" registry; by default, no naming rules are enforced for local fpm projects."
msgstr ""

#: ../../pages/spec/naming.md:8
msgid "TL;DR Always prefix all your module names with a standardized package prefix."
msgstr ""

#: ../../pages/spec/naming.md:9
msgid ""
"A default prefix (package name + double underscore: `my_package__*`) is "
"always reserved by the registry"
msgstr ""

#: ../../pages/spec/naming.md:10
msgid ""
"A custom prefix (no-symbols + single underscore: `mypkg_*`) can be specified,"
" but it is subject to not being reserved in the registry yet."
msgstr ""

#: ../../pages/spec/naming.md:11
msgid ""
"Set default (`module-naming=true`) or custom (`module-naming=\"mypfx\"`) "
"prefix in `fpm.toml` `[build]`."
msgstr ""

#: ../../pages/spec/naming.md:14
msgid ""
"The Fortran language does not support namespaces. This means that all public "
"names (modules, but also global subroutines and functions) must be unique in "
"the build space. Any build that contains duplicate names will fail because it"
" is impossible to resolve a name to a unique object. For this reason, fpm by "
"default requires all packages to comply with simple naming conventions that "
"apply to both the package name and its modules."
msgstr ""

#: ../../pages/spec/naming.md:19
msgid "Fortran names: general rules"
msgstr ""

#: ../../pages/spec/naming.md:21
msgid ""
"As of Fortran 2003 onward, valid Fortran names need to comply with the "
"following rules:"
msgstr ""

#: ../../pages/spec/naming.md:23
msgid "Up to 63 characters long;"
msgstr ""

#: ../../pages/spec/naming.md:24
msgid "Letters are case insensitive;"
msgstr ""

#: ../../pages/spec/naming.md:25
msgid "Must begin with a letter;"
msgstr ""

#: ../../pages/spec/naming.md:26
msgid ""
"Only alphanumeric characters (letters, numbers) and underscores `_` are "
"allowed."
msgstr ""

#: ../../pages/spec/naming.md:28
msgid "*Examples of invalid Fortran names:*"
msgstr ""

#: ../../pages/spec/naming.md:37
msgid "*Examples of valid Fortran names:*"
msgstr ""

#: ../../pages/spec/naming.md:49
msgid "fpm registry names: rules for packages and modules"
msgstr ""

#: ../../pages/spec/naming.md:51
msgid ""
"To reduce the chance of name collisions, any Fortran module name in a package"
" must begin with a unique prefix. Two options are offered."
msgstr ""

#: ../../pages/spec/naming.md:54
msgid "Default Module names"
msgstr ""

#: ../../pages/spec/naming.md:56
msgid ""
"The default option is always valid for all packages, as it is uniquely bound "
"to the package name. It features a fortrannized package name, followed by a "
"double underscore, with these rules:"
msgstr ""

#: ../../pages/spec/naming.md:58
msgid "Must begin with their package name;"
msgstr ""

#: ../../pages/spec/naming.md:59
msgid ""
"The ``default separator`` `__` between the package name chunk and what "
"follows must be used;"
msgstr ""

#: ../../pages/spec/naming.md:60
msgid ""
"Neither the module nor the package name shall contain the default separator "
"sequence elsewhere."
msgstr ""

#: ../../pages/spec/naming.md:63
msgid ""
"The default separator is a *double* underscore, single underscores are "
"allowed anywhere except at the end of a package name."
msgstr ""

#: ../../pages/spec/naming.md:66
msgid "*Valid enforced module names*"
msgstr ""

#: ../../pages/spec/naming.md:68
msgid ""
"When the naming conventions are enforced, these are example modules in a "
"package named `my_pkg` to illustrate the rules:"
msgstr ""

#: ../../pages/spec/naming.md:80
msgid "*Invalid enforced module names*"
msgstr ""

#: ../../pages/spec/naming.md:82
msgid ""
"Considering the same package `my_pkg`, the following names will be invalid "
"according to the naming rules:"
msgstr ""

#: ../../pages/spec/naming.md:92
msgid "Custom Module names"
msgstr ""

#: ../../pages/spec/naming.md:94
msgid ""
"Optionally, one can specify a custom prefix for the package's modules. The "
"custom prefix must be:"
msgstr ""

#: ../../pages/spec/naming.md:96
msgid "A valid Fortran name;"
msgstr ""

#: ../../pages/spec/naming.md:97
msgid ""
"Alphanumeric only characters (no spaces, symbols, dashes, underscores "
"allowed)."
msgstr ""

#: ../../pages/spec/naming.md:99
msgid ""
"Different from the default option, a custom prefix needs to be validated by "
"the registry, which keeps a list of unique custom prefixes to prevent name "
"collisions."
msgstr ""

#: ../../pages/spec/naming.md:102
msgid ""
"Module names with the custom prefix are followed by a ``single underscore`` "
"`_`, which makes this option more flexible and backward compatible with "
"existing packages. When a custom module prefix is specified, the default one "
"is still available. Considering for example a package named `date-time`, with"
" chosen prefix `dt`, the following are all valid module names:"
msgstr ""

#: ../../pages/spec/naming.md:116
msgid "Package names"
msgstr ""

#: ../../pages/spec/naming.md:118
msgid ""
"All packages in FPM registries must have unique names, hence they must abide "
"to the following rules"
msgstr ""

#: ../../pages/spec/naming.md:120
msgid "All package names shall be valid Fortran names;"
msgstr ""

#: ../../pages/spec/naming.md:121
msgid "Dash characters (`-`) are also allowed, and are treated by fpm as underscores;"
msgstr ""

#: ../../pages/spec/naming.md:122
msgid ""
"Package names may contain uppercase and lowercase characters, but their "
"unique identification is made case insensitive;"
msgstr ""

#: ../../pages/spec/naming.md:123
msgid "No duplicate package names are allowed within the same namespace."
msgstr ""

#: ../../pages/spec/naming.md:125
msgid "*Examples of valid package names:*"
msgstr ""

#: ../../pages/spec/naming.md:134
msgid "*Examples of invalid package names:*"
msgstr ""

#: ../../pages/spec/naming.md:145
msgid "Manifest Settings"
msgstr ""

#: ../../pages/spec/naming.md:148
msgid "Key facts:"
msgstr ""

#: ../../pages/spec/naming.md:149
msgid ""
"FPM does not apply naming requirements by default. If you want them, enable "
"them in `fpm.toml`"
msgstr ""

#: ../../pages/spec/naming.md:150
msgid "FPM registries mandatorily require them. Ensure `fpm.toml` enables them."
msgstr ""

#: ../../pages/spec/naming.md:151
msgid ""
"Enable standard prefix with `module-naming=true`, custom prefix with `module-"
"naming=\"prefixname\"`."
msgstr ""

#: ../../pages/spec/naming.md:154
msgid ""
"Module naming requirements can be enabled in `fpm.toml` under the `build` "
"section, using the boolean flag `module-naming`. By default, `module-naming ="
" false`, so no registry name enforcing is checked during the build."
msgstr ""

#: ../../pages/spec/naming.md:179
msgid "Guidelines"
msgstr ""

#: ../../pages/spec/naming.md:182
msgid ""
"These are non-mandatory styling suggestions to improve code readability and "
"uniformity."
msgstr ""

#: ../../pages/spec/naming.md:185
msgid ""
"It's recommended that the public API of each package is contained in a top-"
"level module, whose name is same as the package name. For example, assuming a"
" package ``DateTime`` deals with time and date in Fortran, one could have "
"several modules deal with parts of it:"
msgstr ""

#: ../../pages/spec/naming.md:194
msgid "and a unique public API that's contained in the top-level module:"
msgstr ""

#: ../../pages/spec/naming.md:211
msgid "References"
msgstr ""

#: ../../pages/spec/naming.md:213
msgid ""
"[1] Metcalf, Reid, Cohen, \"[Modern Fortran "
"Explained](https://dl.acm.org/doi/book/10.5555/2090092)\", Oxford University "
"Press."
msgstr ""

#: ../../pages/spec/naming.md:215
msgid ""
"[2] [Style Guide for Python Code](https://peps.python.org/pep-0008/#package-"
"and-module-names)"
msgstr ""

#: ../../pages/spec/publish.md:1
msgid "Package upload"
msgstr ""

#: ../../pages/spec/publish.md:3
msgid ""
"Packages can be uploaded to the [official registry](https://registry-"
"frontend.vercel.app) using the `fpm publish` command. After a successful "
"upload, users can search for the package and use it in their projects. But be"
" aware that the upload is permanent. Once a package is uploaded, it cannot be"
" deleted. If you want to make changes to a package, you will have to create a"
" new version of the package and upload that."
msgstr ""

#: ../../pages/spec/publish.md:5
msgid ""
"**!!! Testing period – We are currently building and testing the registry. "
"All uploaded packages will be deleted after the testing period (in June 2023)"
" !!!**"
msgstr ""

#: ../../pages/spec/publish.md:7
msgid "Prerequisites"
msgstr ""

#: ../../pages/spec/publish.md:9
msgid "Register"
msgstr ""

#: ../../pages/spec/publish.md:11
msgid ""
"Before you can upload a package, you need to have an account on the official "
"registry. You can create an account by visiting the [registry website](https"
"://registry-frontend.vercel.app)."
msgstr ""

#: ../../pages/spec/publish.md:15
msgid ""
"A package must be uploaded to a given namespace. If you don't have a "
"namespace yet, you need to create one on the website first."
msgstr ""

#: ../../pages/spec/publish.md:17
msgid "Token"
msgstr ""

#: ../../pages/spec/publish.md:19
msgid ""
"You need to generate a token for the namespace. You can do this on the "
"website as well. The token is used to authenticate the upload. Do not share "
"the token with anyone else. The token also expires after a certain amount of "
"time. If you need to upload a package again, you will need to generate a new "
"token."
msgstr ""

#: ../../pages/spec/publish.md:23
msgid ""
"A package must specify a valid [semver](https://semver.org/) version in its "
"manifest."
msgstr ""

#: ../../pages/spec/publish.md:25
msgid ""
"You can check the version of the package by running `fpm publish --show-"
"package-version` before publishing."
msgstr ""

#: ../../pages/spec/publish.md:27
msgid "License"
msgstr ""

#: ../../pages/spec/publish.md:29
msgid ""
"A package must specify a valid [SPDX](https://spdx.org/licenses/) license in "
"its manifest."
msgstr ""

#: ../../pages/spec/publish.md:31
msgid "Upload rights"
msgstr ""

#: ../../pages/spec/publish.md:33
msgid ""
"A package can only be uploaded by package admins and maintainers. Package "
"admins can grant admin and maintainer rights to other users."
msgstr ""

#: ../../pages/spec/publish.md:35
msgid "Uploading"
msgstr ""

#: ../../pages/spec/publish.md:37
msgid ""
"fpm will create a tarball and upload the package to the registry when all the"
" requirements are met. You can see all the data being sent to the registry "
"without uploading by running `fpm publish --show-form-data`."
msgstr ""

#: ../../pages/spec/publish.md:39
msgid ""
"To publish a package, run `fpm publish --token <token>` using the token you "
"generated on the website."
msgstr ""

#: ../../pages/tutorial/dependencies.md:1
msgid "Adding dependencies"
msgstr ""

#: ../../pages/tutorial/dependencies.md:3
msgid ""
"This tutorial covers the usage of dependencies with fpm and how to reuse "
"existing fpm projects."
msgstr ""

#: ../../pages/tutorial/dependencies.md:5
msgid "Using the standard library"
msgstr ""

#: ../../pages/tutorial/dependencies.md:7
msgid ""
"We start with a new project with fpm, we want to build a command line "
"application to read a file, find a certain pattern and replace it. Since we "
"do not want to write the replace function ourselves, we will use the Fortran "
"standard library ([stdlib](https://github.com/fortran-lang/stdlib)) as "
"dependency. In the package manifest we define *stdlib* in the *dependencies* "
"table:"
msgstr ""

#: ../../pages/tutorial/dependencies.md:11 ../../pages/tutorial/dependencies.md:77
#: ../../pages/tutorial/dependencies.md:112 ../../pages/tutorial/hello-fpm.md:33
msgid "fpm.toml"
msgstr ""

#: ../../pages/tutorial/dependencies.md:18
msgid ""
"Now we create a module with a procedure to perform the substitution. It "
"requires three steps:"
msgstr ""

#: ../../pages/tutorial/dependencies.md:21
msgid "reading a whole line from one unit"
msgstr ""

#: ../../pages/tutorial/dependencies.md:22
msgid "replace the pattern in the string"
msgstr ""

#: ../../pages/tutorial/dependencies.md:23
msgid "write the new string to an output"
msgstr ""

#: ../../pages/tutorial/dependencies.md:25
msgid ""
"We will use the *replace\\_all* function from the *stdlib\\_strings* module "
"for this purpose. The implementation is shown here"
msgstr ""

#: ../../pages/tutorial/dependencies.md:28
msgid "src/demo.f90"
msgstr ""

#: ../../pages/tutorial/dependencies.md:33
msgid "Finally, we need a command line driver to make use of our new function."
msgstr ""

#: ../../pages/tutorial/dependencies.md:35 ../../pages/tutorial/dependencies.md:125
#: ../../pages/tutorial/hello-fpm.md:52
msgid "app/main.f90"
msgstr ""

#: ../../pages/tutorial/dependencies.md:54
msgid "We can check our command line driver by running it with fpm:"
msgstr ""

#: ../../pages/tutorial/dependencies.md:68
msgid "Adding a testing framework"
msgstr ""

#: ../../pages/tutorial/dependencies.md:70
msgid ""
"Before we continue implementing new features, we want to add some tests to "
"verify that our implementation keeps working as we modify it. A minimalist "
"testing framework is available with [test-drive]. Since the testing framework"
" is only required when developing the package itself, but not for other "
"packages which might in the future make use of our modules, we add it as a "
"development dependency. The *test-drive* package is added in the *dev-"
"dependencies* table as shown below"
msgstr ""

#: ../../pages/tutorial/dependencies.md:85
msgid ""
"For a development dependency like a testing framework we choose a strict "
"version pin by specifying the *tag* we want to use."
msgstr ""

#: ../../pages/tutorial/dependencies.md:88
msgid ""
"Now we can write a simple unit test, since our function works with units, we "
"will create scratch units to create the input and capture the output. For now"
" we will add a simple one line substitution as single test case"
msgstr ""

#: ../../pages/tutorial/dependencies.md:91
msgid "test/main.f90"
msgstr ""

#: ../../pages/tutorial/dependencies.md:96
msgid "We run our new test using fpm"
msgstr ""

#: ../../pages/tutorial/dependencies.md:104
msgid ""
"Creating the scratch units for multiple unit tests will be repetitive, this "
"kind of tasks can usually be done in a separate procedure and reused in "
"several tests."
msgstr ""

#: ../../pages/tutorial/dependencies.md:107
msgid "Target-specific dependencies"
msgstr ""

#: ../../pages/tutorial/dependencies.md:109
msgid ""
"Dependencies can also be used for specific targets only. This can be used for"
" adding a command line interface package, which is only used for the "
"executable but not part of the library dependencies."
msgstr ""

#: ../../pages/tutorial/dependencies.md:118
msgid ""
"We restructure our main program a bit for using [M\\_CLI2] to handle the "
"command line input. The *unnamed* array contains all positional command line "
"arguments, we still use the first two as pattern and replacement, and use all"
" remaining arguments as input. We also add an option to redirect the output. "
"Our final main program looks like"
msgstr ""

#: ../../pages/tutorial/dependencies.md:130
msgid "Again we run a quick check using fpm"
msgstr ""

#: ../../pages/tutorial/dependencies.md:152
msgid "The output looks as expected with two substitutions."
msgstr ""

#: ../../pages/tutorial/dependencies.md:155 ../../pages/tutorial/hello-fpm.md:97
#: ../../pages/tutorial/plugins.md:90
msgid "Summary"
msgstr ""

#: ../../pages/tutorial/dependencies.md:157 ../../pages/tutorial/hello-fpm.md:99
#: ../../pages/tutorial/plugins.md:92
msgid "In this tutorial you learned how to"
msgstr ""

#: ../../pages/tutorial/dependencies.md:159
msgid "depend on another fpm project in the package manifest"
msgstr ""

#: ../../pages/tutorial/dependencies.md:160
msgid "add development dependencies for testing"
msgstr ""

#: ../../pages/tutorial/dependencies.md:161
msgid "use dependencies for executables"
msgstr ""

#: ../../pages/tutorial/hello-fpm.md:1
msgid "First steps with fpm"
msgstr ""

#: ../../pages/tutorial/hello-fpm.md:3
msgid ""
"This tutorial covers the basic usage of the Fortran Package Manager (fpm) "
"command line. It will cover the generation of a new project and the "
"possibility to compile a project into an executable as well as the "
"possibility to run the resulting program."
msgstr ""

#: ../../pages/tutorial/hello-fpm.md:6
msgid "To start a new project with fpm use the *fpm new* command"
msgstr ""

#: ../../pages/tutorial/hello-fpm.md:12
msgid ""
"By default fpm creates a git repository with a dummy project in the fpm "
"standard layout"
msgstr ""

#: ../../pages/tutorial/hello-fpm.md:30
msgid ""
"This is everything we need to start our new project. First, we inspect the "
"package manifest, ``fpm.toml``, which is populated with stub entries for us:"
msgstr ""

#: ../../pages/tutorial/hello-fpm.md:49
msgid ""
"The package manifest contains all the required meta data for the new project."
" Next we checkout the main executable, ``app/main.f90``, fpm has generated "
"for us:"
msgstr ""

#: ../../pages/tutorial/hello-fpm.md:62
msgid ""
"The program already uses a module from our library, which we can find in "
"``src/first_steps.f90``:"
msgstr ""

#: ../../pages/tutorial/hello-fpm.md:64
msgid "src/first_steps.f90"
msgstr ""

#: ../../pages/tutorial/hello-fpm.md:78
msgid "We can run the executable directly with the command ``fpm run``:"
msgstr ""

#: ../../pages/tutorial/hello-fpm.md:86
msgid ""
"Similarly, fpm has already created a stub for testing, which can be invoked "
"with ``fpm test``:"
msgstr ""

#: ../../pages/tutorial/hello-fpm.md:94
msgid ""
"Fpm will automatically track changes in your project when running your "
"project using the *run* and *test* commands."
msgstr ""

#: ../../pages/tutorial/hello-fpm.md:101
msgid "create a new project from the fpm command line"
msgstr ""

#: ../../pages/tutorial/hello-fpm.md:102
msgid "build and run your project executables with fpm"
msgstr ""

#: ../../pages/tutorial/hello-fpm.md:103
msgid "run tests with fpm"
msgstr ""

#: ../../pages/tutorial/index.md:3
msgid "Tutorials"
msgstr ""

#: ../../pages/tutorial/index.md:6
msgid ""
"This section contains courses for learning about the usage and fpm at "
"specific examples."
msgstr ""

#: ../../pages/tutorial/plugins.md:1
msgid "Extending fpm with plugins"
msgstr ""

#: ../../pages/tutorial/plugins.md:3
msgid ""
"The Fortran package manager has a plugin system which allows to easily extend"
" its functionality. This tutorial will show how to install a plugin with fpm "
"and use it."
msgstr ""

#: ../../pages/tutorial/plugins.md:7
msgid "Registry search tool"
msgstr ""

#: ../../pages/tutorial/plugins.md:9
msgid ""
"The [fpm-search](https://github.com/urbanjost/fpm-search) project is a plugin"
" to query the package registry. Since it is built with fpm we can easily "
"install it on our system with"
msgstr ""

#: ../../pages/tutorial/plugins.md:18
msgid ""
"This will install the ``fpm-search`` binary to ``~/.local/bin`` (or "
"``%APPDATA%\\local\\bin`` on Windows)."
msgstr ""

#: ../../pages/tutorial/plugins.md:21
msgid "Ensure that the installed binary is in the ``PATH``, *i.e.* run"
msgstr ""

#: ../../pages/tutorial/plugins.md:28
msgid "If no binary is found, add the directory to your path using"
msgstr ""

#: ../../pages/tutorial/plugins.md
msgid "Bash (Linux)"
msgstr ""

#: ../../pages/tutorial/plugins.md:34
msgid ""
"Default settings for the bash shell can be found in the ``.bashrc`` file in "
"the home directory, to append to the ``PATH`` following the instructions "
"below."
msgstr ""

#: ../../pages/tutorial/plugins.md:41
msgid ""
"Make sure to source your ``.bashrc`` after changing it, otherwise the change "
"will not be applied to the current shell."
msgstr ""

#: ../../pages/tutorial/plugins.md
msgid "Zsh (MacOS)"
msgstr ""

#: ../../pages/tutorial/plugins.md:45
msgid ""
"Default settings for the zsh shell can be found in the ``.zshrc`` file in the"
" home directory, to append to the ``PATH`` use"
msgstr ""

#: ../../pages/tutorial/plugins.md:52
msgid ""
"Make sure to restart zsh after changing the ``.zshrc`` it, otherwise the "
"change will not be applied to the current shell."
msgstr ""

#: ../../pages/tutorial/plugins.md
msgid "CMD (Windows)"
msgstr ""

#: ../../pages/tutorial/plugins.md:56
msgid ""
"The ``PATH`` variable can be modified using the pathman program from the cmd "
"prompt"
msgstr ""

#: ../../pages/tutorial/plugins.md:64
msgid "Now with a working installation we can invoke our new plugin from fpm."
msgstr ""

#: ../../pages/tutorial/plugins.md:72
msgid ""
"Note that we use ``fpm search`` rather than ``fpm-search`` in the command. To"
" find a package for building a command-line interface we can now type"
msgstr ""

#: ../../pages/tutorial/plugins.md:81
msgid ""
"To use one of the packages in our manifest we can generate the necessary "
"dependency line by running"
msgstr ""

#: ../../pages/tutorial/plugins.md:88
msgid ""
"Adding this line to a package manifest allows to depend on the respective "
"project."
msgstr ""

#: ../../pages/tutorial/plugins.md:94
msgid "installing an fpm plugin"
msgstr ""

#: ../../pages/tutorial/plugins.md:95
msgid "use the fpm-search plugin to query the registry"
msgstr ""

#: ../../pages/tutorial/plugins.md:96
msgid "generate a dependency entry from a query result"
msgstr ""

#~ msgid "Meta: Translating the docs"
#~ msgstr ""

#~ msgid ""
#~ "There are already many packages available"
#~ " for use with fpm, providing an "
#~ "easily accessible and rich ecosystem of "
#~ "general purpose and high-performance code."
#~ " For a full list of packages "
#~ "checkout the [fpm registry](https://fortran-"
#~ "lang.org/packages/fpm). New packages can be "
#~ "submitted to the registry "
#~ "[here](https://github.com/fortran-lang/fpm-registry)."
#~ msgstr ""

#~ msgid ""
#~ "Local dependency paths are given relative"
#~ " to the project root and use ``/``"
#~ " as path separator on all platforms."
#~ msgstr ""

#~ msgid ""
#~ "Before we continue implementing new "
#~ "features, we want to add some tests"
#~ " to verify that our implementation keeps"
#~ " worked as we modify it. A "
#~ "minimalist testing framework is available "
#~ "with [test-drive]. Since the testing "
#~ "framework is only required when developing"
#~ " the package itself, but not for "
#~ "other packages which might in the "
#~ "future make use of our modules, we "
#~ "add a local dependency. The *test-"
#~ "drive* package is added in the "
#~ "*dev-dependencies* table as shown below"
#~ msgstr ""

#~ msgid ""
#~ "This documentation is divided into four "
#~ "parts. Select one of the topics below"
#~ " to continue."
#~ msgstr ""

#~ msgid "{octicon}`milestone` Design Documents"
#~ msgstr ""

#~ msgid ""
#~ "Resources about the design of the "
#~ "command line interface, the package "
#~ "manifest, and the general user experience"
#~ msgstr ""

#~ msgid "Browse documents"
#~ msgstr ""

